#!/bin/bash

# This file is generated by Chef

PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin
BKPATH=<%= @xtrabackup_path %>
DEF_FILE=/etc/my.cnf
MYSQL_BACKUP_DIR=<%= @xtrabackup_mysql_bak %>
MYSQL_DIR=/var/lib/mysql

# These three functions handle errors

prompt_err() {
  echo -e "\E[31m[ERROR]\E[m"
}
prompt_ok() {
  echo -e "\E[32m[OK]\E[m"
}

status() {
  if [ $1 -eq 0 ]; then
    prompt_ok
  else
    prompt_err
    exit -1
  fi
}

# Restore function with a check to see if datadir is empty or not.

function restore() {
if [ "$(ls -A $MYSQL_DIR/)" ]; then
     echo "MySQL datadir $MYSQL_DIR is not Empty, Archiving safely..."
     echo ""
     #Stopping MySQL Service for restore
	 /etc/init.d/mysql stop
	 status $?
	 sleep 5s
	 echo "Movig all the MySQL datadir contect to $MV_BACKUP_DIR to proceed safely"
	 /bin/mv -f $MYSQL_DIR/* $MYSQL_BACKUP_DIR
	 status $?
	 /usr/bin/innobackupex --defaults-file=$DEF_FILE --copy-back $BKPATH$F_INCREMENT
	 status $?
	 chown -R mysql:mysql $MYSQL_DIR
	 /etc/init.d/mysql start
	 status $?
else
	 echo "Something is wrong, MySQL datadir $MYSQL_DIR is already empty."
	 status $?
fi
}

array_incrdir=$(ls $BKPATH | sort -n)
echo ${array_incrdir[*]}

# get length of an array

tLen=${#array_incrdir[@]}
lastdir=${array_incrdir[$tLen]}
L_INCREMENT=$(ls <%= @xtrabackup_path %> | sort -n -r | head -1)
F_INCREMENT=$(ls <%= @xtrabackup_path %> | sort -n | head -1)

echo "Latest increment available is $lastdir"

for (( i=1; i<${tLen}; i++ )); do
	 echo ${array_incrdir[$i]}
	 /usr/bin/innobackupex --defaults-file=$DEF_FILE --user=root --password=$(/bin/cat /root/creds/.mysqlpassword) --parallel=4 --use-memory=1G --apply-log --redo-only $BKPATH${array_incrdir[$i]}
	 status $?
	 done

#Now for the last increment as it has to be done without --redo-only option as per percona documentation

	 echo "Preparing the Latest increment"
	 /usr/bin/innobackupex --defaults-file=$DEF_FILE --user=root --password=$(/bin/cat /root/creds/.mysqlpassword) --parallel=4 --use-memory=1G --apply-log $BKPATH$L_INCREMENT
	 status $?

#Now the basedir
	 echo "Preparing the base backup"
	 /usr/bin/innobackupex --defaults-file=$DEF_FILE --user=root --password=$(/bin/cat /root/creds/.mysqlpassword) --parallel=4 --use-memory=1G --apply-log $BKPATH$F_INCREMENT
	 status $?

restore
