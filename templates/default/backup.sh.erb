#!/bin/bash

# This file is generated by Chef

PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin
NOW=$(/bin/date +"%Y-%m-%d")
BKPATH=<%= @xtrabackup_path %>
BASE=<%= @xtrabackup_base %>
ARCHIVE=<%= @archive %>
array_incrdir=$(ls $BKPATH | sort -n)

prompt_err() {
  echo -e "\E[31m[ERROR]\E[m"
}
prompt_ok() {
  echo -e "\E[32m[OK]\E[m"
}

status() {
  if [ $1 -eq 0 ]; then
    prompt_ok
  else
    prompt_err
    exit -1
  fi
}

function archive2() {
if [ "$(ls -A $BASE/)" ]; then
     echo "Archive directory $BASE is not Empty, Archiving..."
     echo ""
     /bin/tar -czpf /disk1/$NOW.tar.gz $BASE/*
     status $?
     echo "Archived file ready $NOW.tar.gz."
     echo "Moving archived file to $ARCHIVE"
     /bin/mv -f /disk1/$NOW.tar.gz $ARCHIVE
     status $?
     echo ""

fi
}

function archive() {
	archive2
    status $?
    #ensure directory is empty
    /bin/rm -rf $BASE/*
    status $?
    /bin/mv $BKPATH* $BASE/
}

function fullbackup() {
	echo "Full backup generation in progress..."
	/usr/bin/innobackupex --defaults-file=/etc/my.cnf --user=root --password=$(/bin/cat /root/creds/.mysqlpassword) --throttle=5 --parallel=4 --rsync --lock-wait-threshold=40 --kill-long-queries-timeout=180 --kill-long-query-type=select $BKPATH
	status $?
}

function incremental() {
    echo "Following directories are available"
    echo ${array_incrdir[*]}
    echo "Using the last incremental/full backup $1 as basedir.."
    CHK_POINT=$BKPATH$1/xtrabackup_checkpoints
    echo "Checkpoint is $CHK_POINT"
    /usr/bin/innobackupex --defaults-file=/etc/my.cnf --user=root --password=$(/bin/cat /root/creds/.mysqlpassword) --throttle=5 --parallel=4 --rsync --incremental $BKPATH --incremental-lsn=$(/bin/cat $CHK_POINT | head -n 3 | tail -n 1 | /bin/awk '{print $3}')
    status $?
}

if [ "$(ls -A $BKPATH)" ]; then
    echo "Backup directory $BKPATH is not Empty, checking for backup..."
    L_INCREMENT=$(ls <%= @xtrabackup_path %> | sort -n -r | head -1)
    F_INCREMENT=$(ls <%= @xtrabackup_path %> | sort -n | head -1)
    F_INCREMENTD=$(ls <%= @xtrabackup_path %> | sort -n | head -1 | awk -F '_' '{print $1}')
    todate=$(date -d "$F_INCREMENTD" +"%y%m%d")
    if [ $todate -le $(date --date='10 day ago' +"%y%m%d") ]; then
        echo "10 days old backup found. Archiving"
        archive
        fullbackup
        else
        incremental $L_INCREMENT
    fi

else
    echo "Backup directory $BKPATH is Empty"
    fullbackup
fi
